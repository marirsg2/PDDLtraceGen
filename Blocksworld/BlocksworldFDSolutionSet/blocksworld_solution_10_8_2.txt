INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /home/yochan-ubuntu19/anaconda3/envs/PDDLtraceGen/bin/python3 /home/yochan-ubuntu19/Fastdownward/builds/release/bin/translate/translate.py ./blocksworld_domain.pddl ./BlocksworldProblemSet/blocksworld_problems_10_8_2.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.004s wall-clock]
382 relevant atoms
250 auxiliary atoms
632 final queue length
1053 total queue pushes
Completing instantiation... [0.010s CPU, 0.005s wall-clock]
Instantiating: [0.010s CPU, 0.011s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
11 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.010s CPU, 0.007s wall-clock]
290 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
20 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]
Reordering and filtering variables...
21 of 21 variables necessary.
11 of 21 mutex groups necessary.
200 of 200 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 21
Translator derived variables: 0
Translator facts: 132
Translator goal facts: 8
Translator mutex groups: 11
Translator total mutex groups size: 121
Translator operators: 200
Translator axioms: 0
Translator task size: 1752
Translator peak memory: 30388 KB
Writing output... [0.010s CPU, 0.002s wall-clock]
Done! [0.030s CPU, 0.031s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/yochan-ubuntu19/Fastdownward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.2561e-05s, 9680 KB] reading input...
[t=0.00085631s, 9804 KB] done reading input!
[t=0.00168874s, 10060 KB] Initializing landmarks count heuristic...
[t=0.00173983s, 10060 KB] Initializing Exploration...
[t=0.00190127s, 10228 KB] Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
[t=0.00366123s, 10228 KB] approx. obedient reasonable orders
[t=0.00375318s, 10228 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00488786s, 10228 KB] Landmarks generation time: 0.00318914s
[t=0.00491582s, 10228 KB] Discovered 46 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00493345s, 10228 KB] 246 edges
[t=0.00505006s, 10228 KB] Simplifying 780 unary operators... done! [600 unary operators]
[t=0.00536615s, 10228 KB] time to simplify: 0.000348548s
[t=0.00542626s, 10228 KB] Initializing additive heuristic...
[t=0.00544578s, 10228 KB] Initializing FF heuristic...
[t=0.00550429s, 10228 KB] Building successor generator...done!
[t=0.00561654s, 10228 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0056321s, 10228 KB] time for successor generation creation: 6.095e-05s
[t=0.0056505s, 10228 KB] Variables: 21
[t=0.00566651s, 10228 KB] FactPairs: 132
[t=0.00568226s, 10228 KB] Bytes per state: 8
[t=0.00574291s, 10228 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0057834s, 10228 KB] 21 initial landmarks, 8 goal landmarks
[t=0.0058226s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 25
[t=0.00584125s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.00585727s, 10228 KB] g=0, 1 evaluated, 0 expanded
[t=0.00587666s, 10228 KB] Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 25
[t=0.00589337s, 10228 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.00594089s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 24
[t=0.00595979s, 10228 KB] g=2, 3 evaluated, 2 expanded
[t=0.00600452s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 23
[t=0.00602314s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.00603907s, 10228 KB] g=4, 5 evaluated, 4 expanded
[t=0.00609579s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 22
[t=0.0061144s, 10228 KB] g=6, 8 evaluated, 7 expanded
[t=0.00614801s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 21
[t=0.00616652s, 10228 KB] g=7, 9 evaluated, 8 expanded
[t=0.00621257s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.006231s, 10228 KB] g=9, 11 evaluated, 10 expanded
[t=0.00626284s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 18
[t=0.00628085s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.00629654s, 10228 KB] g=10, 12 evaluated, 11 expanded
[t=0.00638209s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.00640067s, 10228 KB] g=12, 17 evaluated, 16 expanded
[t=0.00643246s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 17
[t=0.0064507s, 10228 KB] g=12, 18 evaluated, 17 expanded
[t=0.00654862s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.00656741s, 10228 KB] g=14, 24 evaluated, 23 expanded
[t=0.00662445s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 16
[t=0.00664297s, 10228 KB] g=14, 27 evaluated, 26 expanded
[t=0.00679442s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 15
[t=0.00681316s, 10228 KB] g=16, 37 evaluated, 36 expanded
[t=0.00704275s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0070627s, 10228 KB] g=22, 53 evaluated, 52 expanded
[t=0.00710751s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 14
[t=0.0071268s, 10228 KB] g=20, 55 evaluated, 54 expanded
[t=0.00723492s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 13
[t=0.00725721s, 10228 KB] g=22, 62 evaluated, 61 expanded
[t=0.00744377s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 10
[t=0.00746738s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.00748404s, 10228 KB] g=24, 74 evaluated, 73 expanded
[t=0.00757624s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.00759546s, 10228 KB] g=26, 80 evaluated, 79 expanded
[t=0.00773743s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
[t=0.00775698s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.00777321s, 10228 KB] g=26, 90 evaluated, 89 expanded
[t=0.00784665s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
[t=0.00786546s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.00788123s, 10228 KB] g=28, 95 evaluated, 94 expanded
[t=0.00794158s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.00796012s, 10228 KB] g=30, 99 evaluated, 98 expanded
[t=0.00800043s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
[t=0.00801887s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.00803479s, 10228 KB] g=30, 101 evaluated, 100 expanded
[t=0.00807195s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
[t=0.00809045s, 10228 KB] g=31, 103 evaluated, 102 expanded
[t=0.00811851s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.00813685s, 10228 KB] g=32, 104 evaluated, 103 expanded
[t=0.00816469s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
[t=0.00818311s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.00819894s, 10228 KB] g=32, 105 evaluated, 104 expanded
[t=0.00822403s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
[t=0.00824189s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.00825742s, 10228 KB] g=33, 106 evaluated, 105 expanded
[t=0.00828022s, 10228 KB] Solution found!
[t=0.00830239s, 10228 KB] Actual search time: 0.00251461s
unstack b8 b2 (1)
put-down b8 (1)
unstack b2 b1 (1)
put-down b2 (1)
unstack b1 b5 (1)
put-down b1 (1)
unstack b5 b0 (1)
put-down b5 (1)
unstack b0 b6 (1)
put-down b0 (1)
pick-up b1 (1)
stack b1 b6 (1)
pick-up b8 (1)
stack b8 b0 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b6 b4 (1)
put-down b6 (1)
unstack b4 b3 (1)
put-down b4 (1)
unstack b3 b7 (1)
put-down b3 (1)
unstack b7 b9 (1)
stack b7 b8 (1)
pick-up b6 (1)
stack b6 b7 (1)
pick-up b1 (1)
stack b1 b6 (1)
pick-up b9 (1)
stack b9 b1 (1)
pick-up b4 (1)
stack b4 b9 (1)
pick-up b5 (1)
stack b5 b4 (1)
[t=0.00832153s, 10228 KB] Plan length: 34 step(s).
[t=0.00832153s, 10228 KB] Plan cost: 34
[t=0.00832153s, 10228 KB] Expanded 106 state(s).
[t=0.00832153s, 10228 KB] Reopened 0 state(s).
[t=0.00832153s, 10228 KB] Evaluated 107 state(s).
[t=0.00832153s, 10228 KB] Evaluations: 214
[t=0.00832153s, 10228 KB] Generated 679 state(s).
[t=0.00832153s, 10228 KB] Dead ends: 0 state(s).
[t=0.00832153s, 10228 KB] Number of registered states: 107
[t=0.00832153s, 10228 KB] Int hash set load factor: 107/128 = 0.835938
[t=0.00832153s, 10228 KB] Int hash set resizes: 7
[t=0.00832153s, 10228 KB] Search time: 0.00257908s
[t=0.00832153s, 10228 KB] Total time: 0.00832153s
Solution found.
Peak memory: 10228 KB
Remove intermediate file output.sas
search exit code: 0

