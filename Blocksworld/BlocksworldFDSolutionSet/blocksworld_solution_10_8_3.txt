INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /home/yochan-ubuntu19/anaconda3/envs/PDDLtraceGen/bin/python3 /home/yochan-ubuntu19/Fastdownward/builds/release/bin/translate/translate.py ./blocksworld_domain.pddl ./BlocksworldProblemSet/blocksworld_problems_10_8_3.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.004s wall-clock]
382 relevant atoms
250 auxiliary atoms
632 final queue length
1054 total queue pushes
Completing instantiation... [0.010s CPU, 0.005s wall-clock]
Instantiating: [0.010s CPU, 0.011s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
11 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.010s CPU, 0.007s wall-clock]
290 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
20 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.004s wall-clock]
Reordering and filtering variables...
21 of 21 variables necessary.
11 of 21 mutex groups necessary.
200 of 200 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 21
Translator derived variables: 0
Translator facts: 132
Translator goal facts: 8
Translator mutex groups: 11
Translator total mutex groups size: 121
Translator operators: 200
Translator axioms: 0
Translator task size: 1752
Translator peak memory: 30388 KB
Writing output... [0.010s CPU, 0.002s wall-clock]
Done! [0.030s CPU, 0.031s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/yochan-ubuntu19/Fastdownward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.519e-05s, 9680 KB] reading input...
[t=0.000904491s, 9804 KB] done reading input!
[t=0.00173934s, 10060 KB] Initializing landmarks count heuristic...
[t=0.00179085s, 10060 KB] Initializing Exploration...
[t=0.00195403s, 10228 KB] Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
[t=0.00306437s, 10228 KB] approx. obedient reasonable orders
[t=0.00311054s, 10228 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00424289s, 10228 KB] Landmarks generation time: 0.00249512s
[t=0.00427334s, 10228 KB] Discovered 43 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00429117s, 10228 KB] 121 edges
[t=0.00440706s, 10228 KB] Simplifying 780 unary operators... done! [600 unary operators]
[t=0.00472306s, 10228 KB] time to simplify: 0.000349207s
[t=0.00478391s, 10228 KB] Initializing additive heuristic...
[t=0.00480378s, 10228 KB] Initializing FF heuristic...
[t=0.00486214s, 10228 KB] Building successor generator...done!
[t=0.00497365s, 10228 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00498962s, 10228 KB] time for successor generation creation: 6.0422e-05s
[t=0.00500834s, 10228 KB] Variables: 21
[t=0.00502462s, 10228 KB] FactPairs: 132
[t=0.00504073s, 10228 KB] Bytes per state: 8
[t=0.00510261s, 10228 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00514384s, 10228 KB] 21 initial landmarks, 8 goal landmarks
[t=0.00518469s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 22
[t=0.00520366s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.00522056s, 10228 KB] g=0, 1 evaluated, 0 expanded
[t=0.00524151s, 10228 KB] Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 22
[t=0.00525894s, 10228 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.00531817s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 21
[t=0.00533695s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.00535317s, 10228 KB] g=2, 4 evaluated, 3 expanded
[t=0.00539836s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 20
[t=0.00541708s, 10228 KB] g=3, 6 evaluated, 5 expanded
[t=0.00546087s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.00548s, 10228 KB] g=4, 8 evaluated, 7 expanded
[t=0.00552509s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.00554388s, 10228 KB] g=5, 10 evaluated, 9 expanded
[t=0.00558844s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 17
[t=0.00560693s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.00562312s, 10228 KB] g=6, 12 evaluated, 11 expanded
[t=0.005655s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 16
[t=0.00567327s, 10228 KB] g=7, 13 evaluated, 12 expanded
[t=0.00576164s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 14
[t=0.00578086s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.00579715s, 10228 KB] g=10, 18 evaluated, 17 expanded
[t=0.00585568s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 12
[t=0.00587427s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.00589089s, 10228 KB] g=12, 21 evaluated, 20 expanded
[t=0.00618031s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 9
[t=0.00620144s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.00621879s, 10228 KB] g=16, 41 evaluated, 40 expanded
[t=0.0063151s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.00633402s, 10228 KB] g=18, 47 evaluated, 46 expanded
[t=0.0063796s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
[t=0.00639838s, 10228 KB] g=18, 49 evaluated, 48 expanded
[t=0.00647884s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.00649742s, 10228 KB] g=20, 54 evaluated, 53 expanded
[t=0.00658947s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.00661186s, 10228 KB] g=22, 60 evaluated, 59 expanded
[t=0.00664375s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
[t=0.00666856s, 10228 KB] g=23, 61 evaluated, 60 expanded
[t=0.00672806s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.00675065s, 10228 KB] g=22, 63 evaluated, 62 expanded
[t=0.00679725s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
[t=0.00681634s, 10228 KB] g=23, 65 evaluated, 64 expanded
[t=0.00687167s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.00689061s, 10228 KB] g=24, 68 evaluated, 67 expanded
[t=0.00691918s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
[t=0.00693775s, 10228 KB] g=25, 69 evaluated, 68 expanded
[t=0.00698972s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
[t=0.00700834s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.00702459s, 10228 KB] g=28, 72 evaluated, 71 expanded
[t=0.00705027s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
[t=0.00706845s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0070846s, 10228 KB] g=29, 73 evaluated, 72 expanded
[t=0.00710825s, 10228 KB] Solution found!
[t=0.00712727s, 10228 KB] Actual search time: 0.00197833s
unstack b3 b6 (1)
put-down b3 (1)
unstack b8 b0 (1)
put-down b8 (1)
unstack b0 b7 (1)
put-down b0 (1)
unstack b6 b2 (1)
put-down b6 (1)
unstack b7 b1 (1)
put-down b7 (1)
unstack b2 b5 (1)
put-down b2 (1)
unstack b5 b4 (1)
stack b5 b0 (1)
unstack b4 b9 (1)
put-down b4 (1)
pick-up b1 (1)
stack b1 b7 (1)
pick-up b2 (1)
stack b2 b5 (1)
pick-up b9 (1)
stack b9 b4 (1)
pick-up b6 (1)
stack b6 b9 (1)
unstack b1 b7 (1)
put-down b1 (1)
pick-up b7 (1)
stack b7 b2 (1)
pick-up b1 (1)
stack b1 b7 (1)
[t=0.00714555s, 10228 KB] Plan length: 30 step(s).
[t=0.00714555s, 10228 KB] Plan cost: 30
[t=0.00714555s, 10228 KB] Expanded 73 state(s).
[t=0.00714555s, 10228 KB] Reopened 0 state(s).
[t=0.00714555s, 10228 KB] Evaluated 74 state(s).
[t=0.00714555s, 10228 KB] Evaluations: 148
[t=0.00714555s, 10228 KB] Generated 478 state(s).
[t=0.00714555s, 10228 KB] Dead ends: 0 state(s).
[t=0.00714555s, 10228 KB] Number of registered states: 74
[t=0.00714555s, 10228 KB] Int hash set load factor: 74/128 = 0.578125
[t=0.00714555s, 10228 KB] Int hash set resizes: 7
[t=0.00714555s, 10228 KB] Search time: 0.00204346s
[t=0.00714555s, 10228 KB] Total time: 0.00714555s
Solution found.
Peak memory: 10228 KB
Remove intermediate file output.sas
search exit code: 0

