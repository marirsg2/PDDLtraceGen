INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /home/yochan-ubuntu19/anaconda3/envs/PDDLtraceGen/bin/python3 /home/yochan-ubuntu19/Fastdownward/builds/release/bin/translate/translate.py ./blocksworld_domain.pddl ./BlocksworldProblemSet/blocksworld_problems_12_5_4.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.005s wall-clock]
530 relevant atoms
348 auxiliary atoms
878 final queue length
1480 total queue pushes
Completing instantiation... [0.000s CPU, 0.008s wall-clock]
Instantiating: [0.010s CPU, 0.015s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.010s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.007s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.003s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 5
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2505
Translator peak memory: 30900 KB
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.040s CPU, 0.046s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/yochan-ubuntu19/Fastdownward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.3854e-05s, 9680 KB] reading input...
[t=0.00121446s, 9812 KB] done reading input!
[t=0.00206635s, 10076 KB] Initializing landmarks count heuristic...
[t=0.00212989s, 10076 KB] Initializing Exploration...
[t=0.00236344s, 10340 KB] Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
[t=0.00356613s, 10472 KB] approx. obedient reasonable orders
[t=0.00361867s, 10472 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00520308s, 10472 KB] Landmarks generation time: 0.00312694s
[t=0.00523339s, 10472 KB] Discovered 43 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00525504s, 10472 KB] 100 edges
[t=0.00543654s, 10472 KB] Simplifying 1128 unary operators... done! [864 unary operators]
[t=0.00590291s, 10472 KB] time to simplify: 0.000505257s
[t=0.00597952s, 10472 KB] Initializing additive heuristic...
[t=0.00600194s, 10472 KB] Initializing FF heuristic...
[t=0.00606929s, 10472 KB] Building successor generator...done!
[t=0.0062219s, 10472 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00623911s, 10472 KB] time for successor generation creation: 9.2383e-05s
[t=0.00626271s, 10472 KB] Variables: 25
[t=0.00628147s, 10472 KB] FactPairs: 182
[t=0.00630028s, 10472 KB] Bytes per state: 8
[t=0.00636599s, 10472 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00640967s, 10472 KB] 25 initial landmarks, 5 goal landmarks
[t=0.00645411s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 18
[t=0.00647459s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.00649425s, 10472 KB] g=0, 1 evaluated, 0 expanded
[t=0.00651973s, 10472 KB] Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 18
[t=0.00653877s, 10472 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0065949s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.00661562s, 10472 KB] g=1, 3 evaluated, 2 expanded
[t=0.00665487s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 15
[t=0.00667557s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0066949s, 10472 KB] g=2, 4 evaluated, 3 expanded
[t=0.00676315s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 14
[t=0.00678391s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.00680324s, 10472 KB] g=4, 7 evaluated, 6 expanded
[t=0.00687083s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 13
[t=0.00689165s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0069118s, 10472 KB] g=6, 10 evaluated, 9 expanded
[t=0.00698018s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 12
[t=0.00700063s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.00702001s, 10472 KB] g=8, 13 evaluated, 12 expanded
[t=0.00706019s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 11
[t=0.00708049s, 10472 KB] g=9, 14 evaluated, 13 expanded
[t=0.00712038s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 10
[t=0.00714041s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.00715929s, 10472 KB] g=10, 15 evaluated, 14 expanded
[t=0.00721701s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 9
[t=0.00723755s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.00725662s, 10472 KB] g=12, 17 evaluated, 16 expanded
[t=0.00732752s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
[t=0.00734807s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0073673s, 10472 KB] g=14, 20 evaluated, 19 expanded
[t=0.00743774s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
[t=0.00745824s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.00747738s, 10472 KB] g=16, 23 evaluated, 22 expanded
[t=0.00755341s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
[t=0.00757511s, 10472 KB] g=19, 26 evaluated, 25 expanded
[t=0.00761574s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
[t=0.00763608s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.00766176s, 10472 KB] g=20, 27 evaluated, 26 expanded
[t=0.00773096s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
[t=0.0077516s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.00777091s, 10472 KB] g=22, 30 evaluated, 29 expanded
[t=0.00782387s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
[t=0.00784442s, 10472 KB] g=23, 32 evaluated, 31 expanded
[t=0.00788555s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
[t=0.00790606s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.00792506s, 10472 KB] g=24, 33 evaluated, 32 expanded
[t=0.0079589s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.00797873s, 10472 KB] g=25, 34 evaluated, 33 expanded
[t=0.00800962s, 10472 KB] Solution found!
[t=0.00803122s, 10472 KB] Actual search time: 0.00161669s
unstack b1 b9 (1)
put-down b1 (1)
unstack b3 b5 (1)
put-down b3 (1)
unstack b5 b8 (1)
put-down b5 (1)
unstack b8 b2 (1)
put-down b8 (1)
unstack b2 b0 (1)
stack b2 b9 (1)
unstack b0 b4 (1)
put-down b0 (1)
unstack b4 b10 (1)
put-down b4 (1)
unstack b10 b11 (1)
put-down b10 (1)
unstack b2 b9 (1)
put-down b2 (1)
unstack b9 b7 (1)
stack b9 b11 (1)
unstack b7 b6 (1)
put-down b7 (1)
pick-up b6 (1)
stack b6 b1 (1)
pick-up b2 (1)
stack b2 b9 (1)
[t=0.00805229s, 10472 KB] Plan length: 26 step(s).
[t=0.00805229s, 10472 KB] Plan cost: 26
[t=0.00805229s, 10472 KB] Expanded 34 state(s).
[t=0.00805229s, 10472 KB] Reopened 0 state(s).
[t=0.00805229s, 10472 KB] Evaluated 35 state(s).
[t=0.00805229s, 10472 KB] Evaluations: 70
[t=0.00805229s, 10472 KB] Generated 249 state(s).
[t=0.00805229s, 10472 KB] Dead ends: 0 state(s).
[t=0.00805229s, 10472 KB] Number of registered states: 35
[t=0.00805229s, 10472 KB] Int hash set load factor: 35/64 = 0.546875
[t=0.00805229s, 10472 KB] Int hash set resizes: 6
[t=0.00805229s, 10472 KB] Search time: 0.00168676s
[t=0.00805229s, 10472 KB] Total time: 0.00805229s
Solution found.
Peak memory: 10472 KB
Remove intermediate file output.sas
search exit code: 0

