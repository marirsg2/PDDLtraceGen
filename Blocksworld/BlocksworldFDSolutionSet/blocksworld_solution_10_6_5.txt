INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /home/yochan-ubuntu19/anaconda3/envs/PDDLtraceGen/bin/python3 /home/yochan-ubuntu19/Fastdownward/builds/release/bin/translate/translate.py ./blocksworld_domain.pddl ./BlocksworldProblemSet/blocksworld_problems_10_6_5.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.003s wall-clock]
382 relevant atoms
250 auxiliary atoms
632 final queue length
1053 total queue pushes
Completing instantiation... [0.000s CPU, 0.005s wall-clock]
Instantiating: [0.010s CPU, 0.011s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
11 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.007s wall-clock]
290 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
20 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.003s wall-clock]
Reordering and filtering variables...
21 of 21 variables necessary.
11 of 21 mutex groups necessary.
200 of 200 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 21
Translator derived variables: 0
Translator facts: 132
Translator goal facts: 6
Translator mutex groups: 11
Translator total mutex groups size: 121
Translator operators: 200
Translator axioms: 0
Translator task size: 1750
Translator peak memory: 30388 KB
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.030s CPU, 0.031s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/yochan-ubuntu19/Fastdownward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.2688e-05s, 9680 KB] reading input...
[t=0.000851774s, 9804 KB] done reading input!
[t=0.00171121s, 10060 KB] Initializing landmarks count heuristic...
[t=0.00176693s, 10060 KB] Initializing Exploration...
[t=0.00193644s, 10228 KB] Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
[t=0.00275567s, 10228 KB] approx. obedient reasonable orders
[t=0.00280617s, 10228 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00377221s, 10228 KB] Landmarks generation time: 0.00204985s
[t=0.00380034s, 10228 KB] Discovered 38 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00382166s, 10228 KB] 125 edges
[t=0.00394627s, 10228 KB] Simplifying 780 unary operators... done! [600 unary operators]
[t=0.00427118s, 10228 KB] time to simplify: 0.000361221s
[t=0.00433659s, 10228 KB] Initializing additive heuristic...
[t=0.00435827s, 10228 KB] Initializing FF heuristic...
[t=0.00442312s, 10228 KB] Building successor generator...done!
[t=0.00454812s, 10228 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00456537s, 10228 KB] time for successor generation creation: 6.5701e-05s
[t=0.00458864s, 10228 KB] Variables: 21
[t=0.00460759s, 10228 KB] FactPairs: 132
[t=0.0046266s, 10228 KB] Bytes per state: 8
[t=0.00469241s, 10228 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00473635s, 10228 KB] 21 initial landmarks, 6 goal landmarks
[t=0.00477816s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 17
[t=0.00479858s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.00481813s, 10228 KB] g=0, 1 evaluated, 0 expanded
[t=0.00484237s, 10228 KB] Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 17
[t=0.00486103s, 10228 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.00489781s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 16
[t=0.00491796s, 10228 KB] g=1, 2 evaluated, 1 expanded
[t=0.00498109s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 15
[t=0.00500205s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0050214s, 10228 KB] g=4, 5 evaluated, 4 expanded
[t=0.00508099s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 14
[t=0.00510174s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.00512123s, 10228 KB] g=6, 8 evaluated, 7 expanded
[t=0.00525987s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 13
[t=0.00528392s, 10228 KB] g=11, 16 evaluated, 15 expanded
[t=0.00532302s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 11
[t=0.00534371s, 10228 KB] g=12, 17 evaluated, 16 expanded
[t=0.00543258s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 10
[t=0.00545347s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.00547278s, 10228 KB] g=14, 22 evaluated, 21 expanded
[t=0.00556145s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 9
[t=0.00558214s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.00560183s, 10228 KB] g=16, 27 evaluated, 26 expanded
[t=0.00567593s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
[t=0.00569669s, 10228 KB] g=18, 31 evaluated, 30 expanded
[t=0.00575093s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.00577143s, 10228 KB] g=18, 33 evaluated, 32 expanded
[t=0.00584661s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
[t=0.00586735s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0058868s, 10228 KB] g=20, 37 evaluated, 36 expanded
[t=0.00598514s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
[t=0.00600613s, 10228 KB] g=23, 43 evaluated, 42 expanded
[t=0.00607636s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
[t=0.00610083s, 10228 KB] g=26, 47 evaluated, 46 expanded
[t=0.00617164s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
[t=0.00619268s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.00621213s, 10228 KB] g=28, 51 evaluated, 50 expanded
[t=0.00626023s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
[t=0.00628091s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.00630049s, 10228 KB] g=30, 53 evaluated, 52 expanded
[t=0.0063465s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
[t=0.00636679s, 10228 KB] g=29, 55 evaluated, 54 expanded
[t=0.00640002s, 10228 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
[t=0.00642015s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.00643938s, 10228 KB] g=30, 56 evaluated, 55 expanded
[t=0.00647043s, 10228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.00649022s, 10228 KB] g=31, 57 evaluated, 56 expanded
[t=0.0065187s, 10228 KB] Solution found!
[t=0.00653979s, 10228 KB] Actual search time: 0.00179841s
unstack b5 b6 (1)
put-down b5 (1)
unstack b6 b4 (1)
put-down b6 (1)
unstack b4 b9 (1)
put-down b4 (1)
unstack b9 b1 (1)
put-down b9 (1)
unstack b1 b8 (1)
put-down b1 (1)
unstack b8 b0 (1)
put-down b8 (1)
unstack b0 b2 (1)
put-down b0 (1)
pick-up b1 (1)
stack b1 b8 (1)
pick-up b5 (1)
stack b5 b2 (1)
pick-up b9 (1)
stack b9 b1 (1)
unstack b5 b2 (1)
put-down b5 (1)
unstack b2 b7 (1)
put-down b2 (1)
unstack b7 b3 (1)
put-down b7 (1)
pick-up b3 (1)
stack b3 b9 (1)
pick-up b2 (1)
stack b2 b3 (1)
pick-up b5 (1)
stack b5 b2 (1)
[t=0.0065605s, 10228 KB] Plan length: 32 step(s).
[t=0.0065605s, 10228 KB] Plan cost: 32
[t=0.0065605s, 10228 KB] Expanded 57 state(s).
[t=0.0065605s, 10228 KB] Reopened 0 state(s).
[t=0.0065605s, 10228 KB] Evaluated 58 state(s).
[t=0.0065605s, 10228 KB] Evaluations: 116
[t=0.0065605s, 10228 KB] Generated 368 state(s).
[t=0.0065605s, 10228 KB] Dead ends: 0 state(s).
[t=0.0065605s, 10228 KB] Number of registered states: 58
[t=0.0065605s, 10228 KB] Int hash set load factor: 58/64 = 0.90625
[t=0.0065605s, 10228 KB] Int hash set resizes: 6
[t=0.0065605s, 10228 KB] Search time: 0.00186858s
[t=0.0065605s, 10228 KB] Total time: 0.0065605s
Solution found.
Peak memory: 10228 KB
Remove intermediate file output.sas
search exit code: 0

