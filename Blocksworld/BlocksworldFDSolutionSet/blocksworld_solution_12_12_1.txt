INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /home/yochan-ubuntu19/anaconda3/envs/PDDLtraceGen/bin/python3 /home/yochan-ubuntu19/Fastdownward/builds/release/bin/translate/translate.py ./blocksworld_domain.pddl ./BlocksworldProblemSet/blocksworld_problems_12_12_1.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.005s wall-clock]
530 relevant atoms
348 auxiliary atoms
878 final queue length
1479 total queue pushes
Completing instantiation... [0.010s CPU, 0.008s wall-clock]
Instantiating: [0.010s CPU, 0.014s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.010s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.005s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.003s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 12
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2512
Translator peak memory: 30900 KB
Writing output... [0.010s CPU, 0.002s wall-clock]
Done! [0.040s CPU, 0.044s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/yochan-ubuntu19/Fastdownward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.788e-05s, 9680 KB] reading input...
[t=0.00119569s, 9812 KB] done reading input!
[t=0.00204945s, 10076 KB] Initializing landmarks count heuristic...
[t=0.00211056s, 10076 KB] Initializing Exploration...
[t=0.0023366s, 10340 KB] Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
[t=0.00600872s, 10472 KB] approx. obedient reasonable orders
[t=0.00636271s, 10472 KB] Removed 2 reasonable or obedient reasonable orders
[t=0.00840894s, 10472 KB] Landmarks generation time: 0.00634975s
[t=0.0084412s, 10472 KB] Discovered 60 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00845813s, 10472 KB] 422 edges
[t=0.00861645s, 10472 KB] Simplifying 1128 unary operators... done! [864 unary operators]
[t=0.00907616s, 10472 KB] time to simplify: 0.000500268s
[t=0.00914714s, 10472 KB] Initializing additive heuristic...
[t=0.00916734s, 10472 KB] Initializing FF heuristic...
[t=0.00923151s, 10472 KB] Building successor generator...done!
[t=0.00935919s, 10472 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00937464s, 10472 KB] time for successor generation creation: 7.4436e-05s
[t=0.00939262s, 10472 KB] Variables: 25
[t=0.00940791s, 10472 KB] FactPairs: 182
[t=0.00942209s, 10472 KB] Bytes per state: 8
[t=0.00948456s, 10472 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00952639s, 10472 KB] 25 initial landmarks, 12 goal landmarks
[t=0.00956917s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 35
[t=0.00958842s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.00960491s, 10472 KB] g=0, 1 evaluated, 0 expanded
[t=0.00962442s, 10472 KB] Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 35
[t=0.00964159s, 10472 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.00967802s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.00969648s, 10472 KB] g=1, 2 evaluated, 1 expanded
[t=0.00973208s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 32
[t=0.00975097s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.00976663s, 10472 KB] g=2, 3 evaluated, 2 expanded
[t=0.00981852s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 31
[t=0.00983749s, 10472 KB] g=4, 5 evaluated, 4 expanded
[t=0.00989025s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 30
[t=0.0099091s, 10472 KB] g=6, 7 evaluated, 6 expanded
[t=0.0099449s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 29
[t=0.00996359s, 10472 KB] g=7, 8 evaluated, 7 expanded
[t=0.0100336s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0100524s, 10472 KB] g=9, 11 evaluated, 10 expanded
[t=0.0100881s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 26
[t=0.0101064s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0101223s, 10472 KB] g=10, 12 evaluated, 11 expanded
[t=0.0102273s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 25
[t=0.0102465s, 10472 KB] g=12, 17 evaluated, 16 expanded
[t=0.0103172s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 24
[t=0.0103363s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0103521s, 10472 KB] g=12, 20 evaluated, 19 expanded
[t=0.0104359s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 23
[t=0.0104546s, 10472 KB] g=14, 24 evaluated, 23 expanded
[t=0.0105417s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0105607s, 10472 KB] g=16, 28 evaluated, 27 expanded
[t=0.0106149s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 22
[t=0.0106338s, 10472 KB] g=16, 30 evaluated, 29 expanded
[t=0.0107562s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0107752s, 10472 KB] g=18, 36 evaluated, 35 expanded
[t=0.0108793s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 21
[t=0.0109016s, 10472 KB] g=18, 41 evaluated, 40 expanded
[t=0.0109754s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0109939s, 10472 KB] g=20, 44 evaluated, 43 expanded
[t=0.0111477s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 20
[t=0.0111666s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0111827s, 10472 KB] g=22, 52 evaluated, 51 expanded
[t=0.0112351s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 19
[t=0.0112534s, 10472 KB] g=23, 54 evaluated, 53 expanded
[t=0.0112895s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0113075s, 10472 KB] g=24, 55 evaluated, 54 expanded
[t=0.011444s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 18
[t=0.011463s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0114795s, 10472 KB] g=26, 62 evaluated, 61 expanded
[t=0.0115155s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 17
[t=0.011534s, 10472 KB] g=27, 63 evaluated, 62 expanded
[t=0.0115703s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 16
[t=0.0115962s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0116135s, 10472 KB] g=28, 64 evaluated, 63 expanded
[t=0.0116533s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 14
[t=0.011672s, 10472 KB] g=29, 65 evaluated, 64 expanded
[t=0.0118375s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 13
[t=0.0118638s, 10472 KB] g=33, 74 evaluated, 73 expanded
[t=0.0119027s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0119216s, 10472 KB] g=32, 75 evaluated, 74 expanded
[t=0.011956s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 11
[t=0.0119744s, 10472 KB] g=33, 76 evaluated, 75 expanded
[t=0.012042s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0120608s, 10472 KB] g=34, 79 evaluated, 78 expanded
[t=0.0120941s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 9
[t=0.0121127s, 10472 KB] g=35, 80 evaluated, 79 expanded
[t=0.0121889s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
[t=0.0122081s, 10472 KB] g=39, 84 evaluated, 83 expanded
[t=0.0122949s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
[t=0.0123139s, 10472 KB] g=41, 89 evaluated, 88 expanded
[t=0.0123887s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
[t=0.0124076s, 10472 KB] g=42, 93 evaluated, 92 expanded
[t=0.0124507s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
[t=0.0124766s, 10472 KB] g=43, 95 evaluated, 94 expanded
[t=0.0125403s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.012559s, 10472 KB] g=46, 98 evaluated, 97 expanded
[t=0.0125887s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
[t=0.0126102s, 10472 KB] g=47, 99 evaluated, 98 expanded
[t=0.0126655s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
[t=0.0126841s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0127s, 10472 KB] g=50, 102 evaluated, 101 expanded
[t=0.0127267s, 10472 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
[t=0.0127454s, 10472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0127614s, 10472 KB] g=51, 103 evaluated, 102 expanded
[t=0.0127848s, 10472 KB] Solution found!
[t=0.0128041s, 10472 KB] Actual search time: 0.00327255s
unstack b7 b4 (1)
put-down b7 (1)
unstack b4 b8 (1)
put-down b4 (1)
unstack b8 b3 (1)
put-down b8 (1)
unstack b3 b1 (1)
put-down b3 (1)
unstack b1 b2 (1)
put-down b1 (1)
pick-up b8 (1)
stack b8 b1 (1)
unstack b2 b6 (1)
put-down b2 (1)
unstack b6 b0 (1)
stack b6 b2 (1)
unstack b0 b9 (1)
stack b0 b4 (1)
unstack b9 b10 (1)
stack b9 b0 (1)
unstack b10 b5 (1)
stack b10 b8 (1)
unstack b5 b11 (1)
stack b5 b9 (1)
pick-up b11 (1)
stack b11 b7 (1)
pick-up b3 (1)
stack b3 b11 (1)
unstack b6 b2 (1)
put-down b6 (1)
pick-up b2 (1)
stack b2 b10 (1)
pick-up b6 (1)
stack b6 b2 (1)
unstack b5 b9 (1)
put-down b5 (1)
unstack b9 b0 (1)
put-down b9 (1)
unstack b0 b4 (1)
put-down b0 (1)
pick-up b4 (1)
stack b4 b6 (1)
pick-up b5 (1)
stack b5 b9 (1)
pick-up b0 (1)
stack b0 b4 (1)
unstack b5 b9 (1)
put-down b5 (1)
pick-up b9 (1)
stack b9 b0 (1)
pick-up b5 (1)
stack b5 b9 (1)
[t=0.0128222s, 10472 KB] Plan length: 52 step(s).
[t=0.0128222s, 10472 KB] Plan cost: 52
[t=0.0128222s, 10472 KB] Expanded 103 state(s).
[t=0.0128222s, 10472 KB] Reopened 0 state(s).
[t=0.0128222s, 10472 KB] Evaluated 104 state(s).
[t=0.0128222s, 10472 KB] Evaluations: 208
[t=0.0128222s, 10472 KB] Generated 572 state(s).
[t=0.0128222s, 10472 KB] Dead ends: 0 state(s).
[t=0.0128222s, 10472 KB] Number of registered states: 104
[t=0.0128222s, 10472 KB] Int hash set load factor: 104/128 = 0.8125
[t=0.0128222s, 10472 KB] Int hash set resizes: 7
[t=0.0128222s, 10472 KB] Search time: 0.00333813s
[t=0.0128222s, 10472 KB] Total time: 0.0128222s
Solution found.
Peak memory: 10472 KB
Remove intermediate file output.sas
search exit code: 0

