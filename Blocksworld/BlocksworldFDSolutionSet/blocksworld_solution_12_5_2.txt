INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /home/yochan-ubuntu19/anaconda3/envs/PDDLtraceGen/bin/python3 /home/yochan-ubuntu19/Fastdownward/builds/release/bin/translate/translate.py ./blocksworld_domain.pddl ./BlocksworldProblemSet/blocksworld_problems_12_5_2.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.005s wall-clock]
530 relevant atoms
348 auxiliary atoms
878 final queue length
1481 total queue pushes
Completing instantiation... [0.010s CPU, 0.008s wall-clock]
Instantiating: [0.010s CPU, 0.015s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
13 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.010s CPU, 0.010s wall-clock]
420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
24 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.005s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
13 of 25 mutex groups necessary.
288 of 288 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.003s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 182
Translator goal facts: 5
Translator mutex groups: 13
Translator total mutex groups size: 169
Translator operators: 288
Translator axioms: 0
Translator task size: 2505
Translator peak memory: 30900 KB
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.030s CPU, 0.042s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/yochan-ubuntu19/Fastdownward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.2842e-05s, 9680 KB] reading input...
[t=0.00121514s, 9812 KB] done reading input!
[t=0.00205313s, 10076 KB] Initializing landmarks count heuristic...
[t=0.00211714s, 10076 KB] Initializing Exploration...
[t=0.00235288s, 10340 KB] Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
[t=0.00338629s, 10476 KB] approx. obedient reasonable orders
[t=0.00344159s, 10476 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00464313s, 10476 KB] Landmarks generation time: 0.00258122s
[t=0.00467479s, 10476 KB] Discovered 33 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00469692s, 10476 KB] 95 edges
[t=0.004866s, 10476 KB] Simplifying 1128 unary operators... done! [864 unary operators]
[t=0.00533468s, 10476 KB] time to simplify: 0.000508086s
[t=0.00541227s, 10476 KB] Initializing additive heuristic...
[t=0.00543412s, 10476 KB] Initializing FF heuristic...
[t=0.00550167s, 10476 KB] Building successor generator...done!
[t=0.00565659s, 10476 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00567381s, 10476 KB] time for successor generation creation: 9.2502e-05s
[t=0.00569754s, 10476 KB] Variables: 25
[t=0.00571667s, 10476 KB] FactPairs: 182
[t=0.00573545s, 10476 KB] Bytes per state: 8
[t=0.00580368s, 10476 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00584739s, 10476 KB] 18 initial landmarks, 5 goal landmarks
[t=0.00589187s, 10476 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 15
[t=0.00591211s, 10476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.00593128s, 10476 KB] g=0, 1 evaluated, 0 expanded
[t=0.00595669s, 10476 KB] Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 15
[t=0.00597536s, 10476 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.00606131s, 10476 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 14
[t=0.0060826s, 10476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.00610201s, 10476 KB] g=2, 5 evaluated, 4 expanded
[t=0.00614115s, 10476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.00616121s, 10476 KB] g=3, 6 evaluated, 5 expanded
[t=0.00619984s, 10476 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 11
[t=0.00621952s, 10476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0062383s, 10476 KB] g=4, 7 evaluated, 6 expanded
[t=0.00629266s, 10476 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 10
[t=0.00631253s, 10476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.00633151s, 10476 KB] g=6, 9 evaluated, 8 expanded
[t=0.00638472s, 10476 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 9
[t=0.00640491s, 10476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.00642407s, 10476 KB] g=8, 11 evaluated, 10 expanded
[t=0.00647644s, 10476 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
[t=0.00649652s, 10476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.00651568s, 10476 KB] g=10, 13 evaluated, 12 expanded
[t=0.00656858s, 10476 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
[t=0.00658843s, 10476 KB] g=12, 15 evaluated, 14 expanded
[t=0.00662812s, 10476 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
[t=0.00665098s, 10476 KB] g=13, 16 evaluated, 15 expanded
[t=0.00669848s, 10476 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
[t=0.00672018s, 10476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.00674426s, 10476 KB] g=14, 17 evaluated, 16 expanded
[t=0.00680556s, 10476 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
[t=0.00682711s, 10476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.00684341s, 10476 KB] g=16, 19 evaluated, 18 expanded
[t=0.00694046s, 10476 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
[t=0.00697531s, 10476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.00700448s, 10476 KB] g=20, 23 evaluated, 22 expanded
[t=0.00705339s, 10476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.00708443s, 10476 KB] g=21, 24 evaluated, 23 expanded
[t=0.00712828s, 10476 KB] Solution found!
[t=0.00716019s, 10476 KB] Actual search time: 0.00131619s
unstack b9 b0 (1)
put-down b9 (1)
unstack b0 b6 (1)
put-down b0 (1)
unstack b6 b8 (1)
put-down b6 (1)
unstack b8 b5 (1)
put-down b8 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b3 b4 (1)
put-down b3 (1)
unstack b4 b2 (1)
stack b4 b3 (1)
unstack b2 b10 (1)
stack b2 b0 (1)
unstack b4 b3 (1)
put-down b4 (1)
pick-up b3 (1)
stack b3 b2 (1)
pick-up b4 (1)
stack b4 b3 (1)
[t=0.00719314s, 10476 KB] Plan length: 22 step(s).
[t=0.00719314s, 10476 KB] Plan cost: 22
[t=0.00719314s, 10476 KB] Expanded 24 state(s).
[t=0.00719314s, 10476 KB] Reopened 0 state(s).
[t=0.00719314s, 10476 KB] Evaluated 25 state(s).
[t=0.00719314s, 10476 KB] Evaluations: 50
[t=0.00719314s, 10476 KB] Generated 174 state(s).
[t=0.00719314s, 10476 KB] Dead ends: 0 state(s).
[t=0.00719314s, 10476 KB] Number of registered states: 25
[t=0.00719314s, 10476 KB] Int hash set load factor: 25/32 = 0.78125
[t=0.00719314s, 10476 KB] Int hash set resizes: 5
[t=0.00719314s, 10476 KB] Search time: 0.00138975s
[t=0.00719314s, 10476 KB] Total time: 0.00719314s
Solution found.
Peak memory: 10476 KB
Remove intermediate file output.sas
search exit code: 0

